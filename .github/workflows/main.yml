# Adapted from https://github.com/python-attrs/attrs/blob/main/.github/workflows/main.yml
---
name: CI

on:
  push:
    branches: ["master"]
    tags:
      - "*"
  pull_request:
    branches: ["master"]
  workflow_dispatch:

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"
    env:
      USING_COVERAGE: "3.10"

    strategy:
      matrix:
        python-version: ["3.6", "3.10"]

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "Install dependencies"
        run: |
          set -xe
          python -VV
          python -m site
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade coverage[toml] virtualenv tox tox-gh-actions
      - name: "Run tox targets for ${{ matrix.python-version }}"
        run: "python -m tox"

      # We always use a modern Python version for combining coverage to prevent
      # parsing errors in older versions for modern code.
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.10"

      - name: "Combine coverage"
        run: |
          set -xe
          python -m pip install coverage[toml]
          python -m coverage xml
        if: "contains(env.USING_COVERAGE, matrix.python-version)"
      - name: "Upload coverage to Codecov"
        if: "contains(env.USING_COVERAGE, matrix.python-version)"
        uses: "codecov/codecov-action@v1"
        with:
          fail_ci_if_error: true

  package:
    name: "Build, verify, and publish package"
    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.10"

      - name: "Install build, check-wheel-content, and twine"
        run: "python -m pip install build twine check-wheel-contents"
      - name: "Build package"
        run: "python -m build --sdist --wheel ."
      - name: "List result"
        run: "ls -l dist"
      - name: "Check wheel contents"
        run: "check-wheel-contents dist/*.whl"
      - name: "Check long_description"
        run: "python -m twine check dist/*"
      # Automatically publish to PyPI when tags are pushed
      # Added to https://github.com/python-attrs/attrs/blob/main/.github/workflows/main.yml
      - name: Publish distribution to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}


  install-dev:
    strategy:
      matrix:
        os: ["ubuntu-latest"]

    name: "Verify dev env"
    runs-on: "${{ matrix.os }}"

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.10"
      - name: "Install in dev mode"
        run: "python -m pip install -e .[dev]"
      - name: "Import package"
        run: "python -c 'import flask_resty; print(flask_resty.__version__)'"
